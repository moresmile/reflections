subject: Git with my Reflection and git commands, on the bottom are the Q&A


Creating Repository
1) clone repository
		git clone "://github.com/moresmile/recipes.git"

2) create Repository 
		git init

Commit - is a snapshot of a Git repository
Command, to found out how many commits the new created repository contains:
3)
		git log
		

==My Reflection ===========================================================

moresmile (master #) reflection $ git init
Initialized empty Git repository in C:/Users/moresmile/Udacity-Git/version-control/reflection/.git/


moresmile (master #) reflection $ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        lesson-2-reflection-prompts.txt
        lesson_1_reflection_prompts.txt
        lesson_2_reflections.txt

nothing added to commit but untracked files present (use "git add" to track)

===========================================================================


(WORKING AREA -> STAGING -> COMMIT)
Staging - is a LOGICAL state before I decide which file will be commited
Add a file to stage area

==My Reflection ===========================================================

moresmile (master #) reflection $ git add lesson_2_reflections.txt
moresmile (master +) reflection $ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

        new file:   lesson_2_reflections.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        lesson-2-reflection-prompts.txt
        lesson_1_reflection_prompts.txt
===========================================================================


Accidently addad file(s) can be remove: git reset 

==My Reflection ===========================================================
moresmile (master +) reflection $ git reset lesson_2_reflections.txt
moresmile (master #) reflection $ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

        lesson-2-reflection-prompts.txt
        lesson_1_reflection_prompts.txt
        lesson_2_reflections.txt

nothing added to commit but untracked files present (use "git add" to track)
===========================================================================

commit
git commit -m "Commit message"

===========================================================================







===========================================================================

                              Q&A

===========================================================================
What happens when you initialize a repository? Why do you need to do it?
mkdir recipes
cd recipes
git init
  : Output : Initialized empty Git repository in C:/Users/SomeUser/Udacity-Git/version-control/recipes/.git/

  1) Create file in Sublime editor:
  subl lesson_2_reflections.txt
    Save and Close Sublime editor

  2) check status
  git status

  

How is the staging area different from the working directory and the repository?
What value do you think it offers?

  (WORKING AREA -> Staging Area -> COMMIT, Repository)
    The staging area is an intermediate area where I can add changes before
    committing them to the repository. This allows me to add changes to the
    staging area one-by-one, and decide is which file is the right file, so 
    I can also remove unneded files from staging area.
    In this area is possible to commit all(files, directories) at once,
    and that makes easear to navigate when I create one commit per logical change

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?